;====================================================================
; Processor		: ATmega8515
; Compiler		: AVRASM
;====================================================================
.include "m8515def.inc"

;====================================================================
; DEFINITIONS
;====================================================================
.def temp = r16 ; temporary register
.def stack = r20 ; stack
.def EW = r23 ; for PORTA
.def PB = r24 ; for PORTB
.def A  = r25

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================
.org $00
	rjmp INIT_STACK

;====================================================================
; CODE SEGMENT
;====================================================================
INIT_STACK:
	ldi	stack,low(RAMEND)
	out	SPL,stack	            ;init Stack Pointer		
	ldi stack,high(RAMEND)
	out	SPH,stack

Main:
	rcall INIT
	;;Write code here
	

forever:
	rjmp forever

INIT:
	rcall INIT_LED
	rcall INIT_LCD_MAIN
	ret

INIT_LED:
	ser temp ; load $FF to temp
	out DDRC,temp ; Set PORTC to output
	ret

INPUT_TEXT:
	ldi ZH,high(2*message) ; Load high part of byte address into ZH
	ldi ZL,low(2*message) ; Load low part of byte address into ZL
	ret

INIT_LCD_MAIN:
	rcall INIT_LCD

	ser temp
	out DDRA,temp ; Set port A (LCD) as output
	out DDRB,temp ; Set port B (LCD) as output

	rcall INPUT_TEXT

LOADBYTE:
	lpm ; Load byte from program memory into r0

	tst r0 ; Check if we've reached the end of the message
	breq END_LCD ; If so, quit

	mov A, r0 ; Put the character onto Port B
	rcall WRITE_TEXT
	adiw ZL,1 ; Increase Z registers
	rjmp LOADBYTE

END_LCD:
	ret

INIT_LCD:
	;; Function Set
	cbi PORTA,1 ; CLR RS
	ldi PB,0x38 ; MOV DATA,0x38 --> 8bit, 2line, 5x7
	out PORTB,PB
	sbi PORTA,0 ; SETB EN
	cbi PORTA,0 ; CLR EN
	rcall DELAY_01
	;;Display ON/OFF control
	cbi PORTA,1 ; CLR RS
	ldi PB,$0E ; MOV DATA,0x0E --> disp ON, cursor ON, blink OFF
	out PORTB,PB
	sbi PORTA,0 ; SETB EN
	cbi PORTA,0 ; CLR EN
	rcall DELAY_01
	rcall CLEAR_LCD ; CLEAR LCD
	;;Entry Mode Set
	cbi PORTA,1 ; CLR RS
	ldi PB,$06 ; MOV DATA,0x06 --> increase cursor, display sroll OFF
	out PORTB,PB
	sbi PORTA,0 ; SETB EN
	cbi PORTA,0 ; CLR EN
	rcall DELAY_01
	ret

CLEAR_LCD:
	cbi PORTA,1 ; CLR RS
	ldi PB,$01 ; MOV DATA,0x01
	out PORTB,PB
	sbi PORTA,0 ; SETB EN
	cbi PORTA,0 ; CLR EN
	rcall DELAY_01
	ret

WRITE_TEXT:
	sbi PORTA,1 ; SETB RS
	out PORTB, A
	sbi PORTA,0 ; SETB EN
	cbi PORTA,0 ; CLR EN
	rcall DELAY_01
	ret

DELAY_01:
	; Generated by delay loop calculator
	; at http://www.bretmulvey.com/avrdelay.html
	;
	; DELAY_CONTROL 40 000 cycles
	; 5ms at 8.0 MHz

	    ldi  r18, 52
	    ldi  r19, 242
	L1: dec  r19
	    brne L1
	    dec  r18
	    brne L1
	    nop
	ret


;====================================================================
; DATA
;====================================================================

message:
.db "Input kata :",0
